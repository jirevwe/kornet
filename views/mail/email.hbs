<div class="container">
    <a href="/mail/reply/{{message._id}}" class="btn btn-default">Reply</a>
    <a href="/mail/trash/{{message._id}}" class="btn btn-default">Move to Trash</a>
    <div class="list-group">
        <div href="/mail/{{message._id}}" class="list-group-item">
            <h4 class="list-group-item-heading">{{message.subject}}</h4>
            {{# if_eq messages.mailbox 'Inbox'}}
            <p class="list-group-item-text">From: {{message.from.text}}</p>
            {{else}}
            <p class="list-group-item-text">To: {{message.to.text}}</p>
            {{/if_eq}}
            <p class="list-group-item-text">Date: {{message.date}}</p>
            <br>
            <div class="list-group-item-text container" id="text">
                {{# if message.html }}
                    <p>{{{message.html}}}</p>
                {{else}}
                    <p>{{message.text}}</p>
                {{/if}}
            </div>
            <div class="container">
                <div id="attachments" class="list-group"></div>
            </div>
        </div>
    </div>
</div>
<script src="/socket.io/socket.io.js"></script>
<script>
    $(document).ready(() => {
        let loaded = false;
        var socketio = io.connect();

        if(!loaded){
            socketio.on("imap_end_attachment", function(data) {
                let html =  $('#attachments').html();
                for(file in data['content']){
                    html += '<span><a href="' + data['content'][file]['link'] +'">' + data['content'][file]['name'] + '</a></span><br>';
                }
                $('#attachments').html(html);
            });


            let xhr = $.ajax({
                url: "http://localhost:3000/mail/mail-body/{{message._id}}",
                type: "GET",
                success: function(data, txt_stat, jq_xhr){
                    console.log(data);
                    loaded = true;
                },
                error: function(response){
                    console.log("Error: " + JSON.stringify(response));
                }
            });

            let fn = () =>
            {
                if(xhr != undefined && xhr.readyState != 4){
                    xhr.abort();
                }
            };
            setInterval(fn, 500);
        }
    });
</script>